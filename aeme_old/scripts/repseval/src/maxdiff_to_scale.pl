#!/usr/bin/perl
#
#
#   maxdiff_to_scale.pl
#
#   - convert MaxDiff answers to a list of word pairs rated on a scale
#
#
#
#
#   Peter Turney
#   December 19, 2011
#
#
#
#
#
#
#   check command line arguments
#
if ($#ARGV != 1) {
  print "\n\nUsage:\n\n";
  print "maxdiff_to_scale.pl <input file of MaxDiff answers> <output file of rated pairs>\n\n";
  exit;
}
#
#   input file of MaxDiff answers
#
$max_file = $ARGV[0];
#
#   output file of rated pairs
#
$out_file = $ARGV[1];
#
#
#
#
#
#
#
#   read the MaxDiff answers
#
%pair2least = ();     #   $pair2least{$pair} = <number of times $pair is chosen as least illustrative>
%pair2most  = ();     #   $pair2most{$pair}  = <number of times $pair is chosen as most illustrative>
%pair2num   = ();     #   $pair2num{$pair}   = <number of MaxDiff questions including $pair>
$num_pairs  = 0;      #   number of unique pairs
$num_max    = 0;      #   number of MaxDiff questions
#
print "reading file of MaxDiff answers $max_file ...\n";
#
open(INF, "< $max_file");
#
while ($line = <INF>) {
  #
  #   typical $line:
  #
  #   # relation1 relation2 relation3 relation4 least_illustrative  most_illustrative user_selected_relation
  #   "school:fish" "library:book"  "flock:sheep" "flock:bird"  "flock:bird"  "flock:sheep" "X is made from a collection of Y"
  #   "school:fish" "library:book"  "flock:sheep" "flock:bird"  "flock:sheep" "library:book"  "X is made from a collection of Y"
  #
  if ($line =~ /^\#/) { next; }            # skip comments
  @fields = split(/\s+/, $line);
  for ($i = 0; $i < 4; $i++) {
    $pair = $fields[$i];
    if (! defined($pair2num{$pair})) {     # if new $pair, then initialize hash tables
      $pair2least{$pair} = 0;
      $pair2most{$pair}  = 0;
      $pair2num{$pair}   = 0;
      $num_pairs++;
    }
    $pair2num{$pair}++;
  }
  $least = $fields[4];
  $most  = $fields[5];
  $pair2least{$least}++;
  $pair2most{$most}++;
  $num_max++;
}
#
close(INF);
#
print "... read $num_max MaxDiff answers ...\n";
print "... read $num_pairs unique pairs ...\n";
print "... done.\n";
#
#
#
#
#
#   score the pairs
#
print "processing pairs and writing to $out_file ...\n";
#
@scores = ();
@pairs  = keys %pair2num;
#
foreach $pair (@pairs) {
  $num_least = $pair2least{$pair};
  $num_most  = $pair2most{$pair};
  $num_quest = $pair2num{$pair};
  $pct_least = 100 * $num_least / $num_quest;
  $pct_most  = 100 * $num_most / $num_quest;
  $score     = $pct_most - $pct_least;
  $item      = sprintf("%5.1f %s", $score, $pair);
  push(@scores, $item);
}
#
#   sort
#
@sorted = sort {$b <=> $a} @scores;
#
#   output
#
open(OUTF, "> $out_file");
#
print OUTF "#\n";
print OUTF "#   Generated by:               maxdiff_to_scale.pl\n";
print OUTF "#   MaxDiff File:               $max_file\n";
print OUTF "#   Scaled File:                $out_file\n";
print OUTF "#   Number of MaxDiff Answers:  $num_max\n";
print OUTF "#   Number of Unique Pairs:     $num_pairs\n";
print OUTF "#\n";
print OUTF "#   Score  = Most - Least\n";
print OUTF "#   Most   = Percentage of times given pair was chosen as Most Illustrative\n";
print OUTF "#   Least  = Percentage of times given pair was chosen as Least Illustrative\n";
print OUTF "#\n";
#
foreach $item (@sorted) {
  print OUTF "$item\n";
}
#
close(OUTF);
#
print "... done.\n";
#
#
#
#
#
#